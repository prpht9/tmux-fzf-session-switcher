#!/usr/bin/env bash

SOURCE=${BASH_SOURCE[0]}
while [ -L "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
  SOURCE=$(readlink "$SOURCE")
  [[ $SOURCE != /* ]] && SOURCE=$DIR/$SOURCE # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
CURRENT_DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )

source $CURRENT_DIR/../env.sh

repo_path=$(get_tmux_option "@tfss_repo_path" "$default_repo_path")
session_launcher=$(get_tmux_option "@tfss_session_launcher" "$default_session_launcher")

if [[ $# -eq 1 ]] ; then
  session_dir=$1
else
  session_dir=$(fd '\.git$' "$repo_path" -H | sed -r 's@/\.git/?$@@' | fzf)
fi

if [[ -z $session_dir ]]; then
  exit 0
fi

session=$(basename "$session_dir" | tr . _)
tmux_running=$(tmux ls|echo "$?")

if [ $tmux_running == "1" ] ; then
  #tmux new-session -s $session -c $session_dir
  tmux start-server
fi

if tmux has-session -t="${session}" 2> /dev/null; then
  echo "has-session true"
  if [ -z "$TMUX" ] ; then
    tmux attach-session -t "${session}"
  else
    tmux switch-client -t "${session}"
    exit
  fi
else
  echo "has-session false"
  tmux new-session -ds $session -c $session_dir -n "localhost"
  eval "$session_launcher $session $session_dir"
fi

